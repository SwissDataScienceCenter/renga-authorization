---
  swagger: "2.0"
  info: 
    title: "Graph Navigation Service"
    description: "Navigate the graph"
    version: "1.0.0"
  schemes: 
    - "https"
  basePath: "/"
  produces: 
    - "application/json"
  consumes: 
    - "application/json"
  paths: 
    /vertex/{vertex-id}: 
      parameters: 
        - 
          name: "vertex-id"
          in: "path"
          description: "the id representing the vertex"
          type: "string"
          required: true
      get: 
        summary: "Return the given vertex"
        description: "Return the given vertex"
        responses: 
          200: 
            description: "Returns the given vertex."
            schema: 
              $ref: "#/definitions/PersistedVertex"
          default: 
            description: "Unexpected error"
            schema: 
              $ref: "#/definitions/Error"
    /edge/{edge-id}: 
      parameters: 
        - 
          name: "edge-id"
          in: "path"
          description: "the id representing the edge"
          type: "string"
          required: true
      get: 
        summary: "Return the given edge"
        description: "Return the given edge"
        responses: 
          200: 
            description: "Returns the given edge."
            schema: 
              $ref: "#/definitions/PersistedEdge"
          default: 
            description: "Unexpected error"
            schema: 
              $ref: "#/definitions/Error"
    /vertex/{vertex-id}/edges: 
      parameters: 
        - 
          name: "vertex-id"
          in: "path"
          description: "the id representing the vertex"
          type: "string"
          required: true
      get: 
        summary: "Return the edges of the given vertex"
        description: "Return the edges of the given vertex"
        parameters: 
          - 
            name: "direction"
            in: "query"
            description: "edge direction"
            type: "string"
            enum: 
              - "in"
              - "out"
              - "both"
            required: false
        responses: 
          200: 
            description: "Returns the edges of the given vertex"
            schema: 
              type: "object"
              properties: 
                edges: 
                  type: "array"
                  items: 
                    $ref: "#/definitions/PersistedEdge"
              required: 
                - "edges"
          default: 
            description: "Unexpected error"
            schema: 
              $ref: "#/definitions/Error"
  definitions: 
    Key: 
      type: "string"
      title: "Key"
      description: "property key, pattern: \"namspace:name\""
      minLength: 2
    Vertex: 
      title: "Vertex"
      allOf: 
        - 
          $ref: "#/definitions/Typed"
        - 
          type: "object"
          properties: 
            properties: 
              type: "array"
              items: 
                $ref: "#/definitions/MultiPropertyValue"
    Edge: 
      type: "object"
      properties: 
        label: 
          type: "string"
          description: "Edge label"
        from: 
          type: "object"
          description: "Vertex reference"
        to: 
          type: "object"
          description: "Vertex reference"
        properties: 
          type: "array"
          items: 
            $ref: "#/definitions/Property"
      required: 
        - "label"
        - "from"
        - "to"
        - "properties"
    VertexProperty: 
      title: "VertexProperty"
      allOf: 
        - 
          type: "object"
          properties: 
            key: 
              $ref: "#/definitions/Key"
            properties: 
              type: "array"
              items: 
                $ref: "#/definitions/Property"
        - 
          $ref: "#/definitions/DataValue"
    Property: 
      title: "Property"
      allOf: 
        - 
          type: "object"
          properties: 
            key: 
              $ref: "#/definitions/Key"
        - 
          $ref: "#/definitions/DataValue"
      required: 
        - "key"
        - "data_type"
        - "value"
    Typed: 
      type: "object"
      properties: 
        types: 
          type: "array"
          items: 
            $ref: "#/definitions/Key"
    MultiPropertyValue: 
      type: "object"
      title: "MultiPropertyValue"
      properties: 
        key: 
          $ref: "#/definitions/Key"
        data_type: 
          $ref: "#/definitions/DataType"
        cardinality: 
          $ref: "#/definitions/Cardinality"
        values: 
          type: "array"
          items: 
            $ref: "#/definitions/VertexProperty"
      required: 
        - "key"
        - "data_type"
        - "cardinality"
        - "values"
    DataValue: 
      type: "object"
      title: "DataValue"
      properties: 
        data_type: 
          $ref: "#/definitions/DataType"
        value: 
          type: 
            - "string"
            - "number"
            - "boolean"
      required: 
        - "value"
    VertexReference: 
      title: "VertexReference"
      discriminator: "type"
      properties: 
        type: 
          type: "string"
          enum: 
            - "persisted"
            - "new"
      required: 
        - "type"
    PersistedVertexReference: 
      title: "PersistedVertexReference"
      allOf: 
        - 
          $ref: "#/definitions/VertexReference"
        - 
          properties: 
            id: 
              type: "string"
      required: 
        - "type"
        - "id"
    NewVertex: 
      title: "NewVertex"
      allOf: 
        - 
          type: "object"
          properties: 
            temp_id: 
              type: "integer"
              format: "int32"
          required: 
            - "temp_id"
        - 
          $ref: "#/definitions/Vertex"
    PersistedVertex: 
      title: "PersistedVertex"
      allOf: 
        - 
          type: "object"
          properties: 
            id: 
              type: "string"
          required: 
            - "id"
        - 
          $ref: "#/definitions/Typed"
        - 
          type: "object"
          properties: 
            properties: 
              type: "array"
              items: 
                $ref: "#/definitions/PersistedMultiPropertyValue"
    PersistedEdge: 
      type: "object"
      title: "PersistedEdge"
      properties: 
        id: 
          type: "string"
        label: 
          type: "string"
          description: "Edge label"
        from: 
          $ref: "#/definitions/PersistedVertexReference"
        to: 
          $ref: "#/definitions/PersistedVertexReference"
        properties: 
          type: "array"
          items: 
            $ref: "#/definitions/Property"
      required: 
        - "id"
        - "label"
        - "from"
        - "to"
        - "properties"
    PersistedMultiPropertyValue: 
      type: "object"
      title: "PersistedMultiPropertyValue"
      properties: 
        key: 
          $ref: "#/definitions/Key"
        data_type: 
          $ref: "#/definitions/DataType"
        cardinality: 
          $ref: "#/definitions/Cardinality"
        values: 
          type: "array"
          items: 
            $ref: "#/definitions/PersistedVertexProperty"
      required: 
        - "key"
        - "data_type"
        - "cardinality"
        - "values"
    PersistedVertexProperty: 
      title: "PersistedVertexProperty"
      allOf: 
        - 
          type: "object"
          properties: 
            id: 
              type: "string"
            parent: 
              type: "string"
          required: 
            - "id"
        - 
          $ref: "#/definitions/VertexProperty"
    DataType: 
      type: "string"
      title: "DataType"
      enum: 
        - "string"
        - "character"
        - "boolean"
        - "byte"
        - "short"
        - "integer"
        - "long"
        - "float"
        - "double"
        - "uuid"
    Cardinality: 
      type: "string"
      title: "Cardinality"
      enum: 
        - "single"
        - "set"
        - "list"
    Multiplicity: 
      type: "string"
      title: "Multiplicity"
      enum: 
        - "multi"
        - "simple"
        - "one_to_many"
        - "many_to_one"
        - "one_to_one"
    MgmtGraphDomain: 
      type: "object"
      title: "GraphDomain"
      properties: 
        id: 
          type: "string"
          description: "uuid of the graph domain."
        namespace: 
          type: "string"
          description: "The namespace of the graph domain."
      required: 
        - "id"
        - "namespace"
    MgmtGraphDomainRequest: 
      type: "object"
      title: "GraphDomainRequest"
      properties: 
        namespace: 
          type: "string"
          description: "The namespace of the graph domain."
      required: 
        - "namespace"
    MgmtPropertyKey: 
      type: "object"
      title: "PropertyKey"
      properties: 
        id: 
          type: "string"
          description: "uuid of the property key"
        graph_domain: 
          $ref: "#/definitions/MgmtGraphDomain"
        name: 
          type: "string"
          description: "name of the property key"
        data_type: 
          $ref: "#/definitions/DataType"
        cardinality: 
          $ref: "#/definitions/Cardinality"
      required: 
        - "id"
        - "graph_domain"
        - "name"
        - "data_type"
        - "cardinality"
    MgmtPropertyKeyRequest: 
      type: "object"
      title: "PropertyKeyRequest"
      properties: 
        namespace: 
          type: "string"
          description: "namespace of the property key"
        name: 
          type: "string"
          description: "name of the property key"
        data_type: 
          $ref: "#/definitions/DataType"
        cardinality: 
          $ref: "#/definitions/Cardinality"
      required: 
        - "namespace"
        - "name"
        - "data_type"
        - "cardinality"
    MgmtEdgeLabel: 
      type: "object"
      title: "EdgeLabel"
      properties: 
        id: 
          type: "string"
          description: "uuid of the edge label"
        graph_domain: 
          $ref: "#/definitions/MgmtGraphDomain"
        name: 
          type: "string"
          description: "name of the edge label"
        multiplicity: 
          $ref: "#/definitions/Multiplicity"
      required: 
        - "id"
        - "graph_domain"
        - "name"
        - "multiplicity"
    MgmtEdgeLabelRequest: 
      type: "object"
      title: "EdgeLabel"
      properties: 
        namespace: 
          type: "string"
          description: "namespace of the property key"
        name: 
          type: "string"
          description: "name of the edge label"
        multiplicity: 
          $ref: "#/definitions/Multiplicity"
      required: 
        - "namespace"
        - "name"
        - "multiplicity"
    Mutation: 
      type: "object"
      title: "Mutation"
      properties: 
        operations: 
          type: "array"
          items: 
            $ref: "#/definitions/Operation"
      required: 
        - "operations"
    MutationResponse: 
      type: "object"
      title: "MutationResponse"
      properties: 
        id: 
          type: "string"
      required: 
        - "id"
    MutationStatus: 
      type: "object"
      title: "MutationStatus"
      properties: 
        id: 
          type: "string"
        status: 
          type: "string"
          enum: 
            - "pending"
            - "success"
            - "failed"
        query: 
          $ref: "#/definitions/Mutation"
        result: 
          type: "object"
      required: 
        - "id"
        - "status"
        - "query"
    Operation: 
      title: "Operation"
      discriminator: "type"
      properties: 
        type: 
          type: "string"
          enum: 
            - "create_vertex"
      required: 
        - "type"
    CreateVertex: 
      title: "CreateVertex"
      allOf: 
        - 
          $ref: "#/definitions/Operation"
        - 
          properties: 
            element: 
              $ref: "#/definitions/NewVertex"
      required: 
        - "type"
        - "element"
    Error: 
      type: "object"
      properties: 
        code: 
          type: "integer"
          format: "int32"
        message: 
          type: "string"
        fields: 
          type: "string"
